<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestTask</name>
    </assembly>
    <members>
        <member name="M:TestApplication.Controllers.AuthController.Login(System.String)">
            <summary>
            Generate an authentication token.
            </summary>
            <param name="email">The email of the user to log in.</param>
            <returns>An authentication token if the login is successful.</returns>
            <response code="200">Authentication token generated successfully.</response>
            <response code="404">User with the provided email not found.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.CreateUser(TestApplication.DTO.CreateUserRequest)">
             <summary>
             Create a new user.
             </summary>
             <param name="request">Request to create a user.</param>
             <remarks>
             Sample request:
            
                 POST /api/users/create
                 {
                     "name": "John Doe",
                     "email": "johndoe@example.com",
                     "age": 30
                 }
            
             </remarks>
             <returns>Result of user creation.</returns>
             <response code="200">User created successfully.</response>
             <response code="400">User with the same email already exists or the age is less than zero.</response>
             <response code="500">An error occurred while creating the user.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.AddRoleToUser(TestApplication.DTO.AddUserRoleRequest)">
            <summary>
            Add a role to a user.
            </summary>
            <param name="request">Request to add a role to a user.</param>
            <returns>Result of adding the role to the user.</returns>
            <response code="200">Role added to the user successfully.</response>
            <response code="500">An error occurred while adding the role to the user.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.GetUser(System.Guid)">
            <summary>
            Get a user by their ID.
            </summary>
            <param name="id">The unique identifier of the user.</param>
            <returns>The user with the specified ID.</returns>
            <response code="200">User found and returned successfully.</response>
            <response code="404">User with the specified ID not found.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.GetUsers(System.Int32,System.Int32)">
            <summary>
            Get a paginated list of users.
            </summary>
            <param name="pageNumber">The page number of the results (1-based).</param>
            <param name="pageSize">The number of users per page.</param>
            <returns>A paginated list of users.</returns>
            <response code="200">List of users retrieved successfully.</response>
            <response code="400">Invalid page number or page size provided.</response>
            <response code="404">No users found.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.FilterSortUsers(TestApplication.DTO.FilterSortUserRequest)">
            <summary>
            Filter and sort users with pagination.
            </summary>
            <param name="request">The filter and sort criteria.</param>
            <returns>A paginated list of filtered and sorted users.</returns>
            <response code="200">Filtered and sorted users retrieved successfully.</response>
            <response code="400">Invalid page number or page size provided.</response>
            <response code="500">Error occurred while filtering/sorting users.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.FilterSortUsersRoles(TestApplication.DTO.FilterSortRolesRequest)">
            <summary>
            Filter and sort roles with pagination.
            </summary>
            <param name="request">The filter and sort criteria.</param>
            <returns>A paginated list of filtered and sorted roles.</returns>
            <response code="200">Filtered and sorted roles retrieved successfully.</response>
            <response code="400">Invalid page number or page size provided.</response>
            <response code="500">Error occurred while filtering/sorting roles.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.EditUser(TestApplication.DTO.EditUserRequest)">
            <summary>
            Edit an existing user.
            </summary>
            <param name="request">The user details to be edited.</param>
            <returns>A message indicating the result of the user edit.</returns>
            <response code="200">User edited successfully.</response>
            <response code="400">Invalid user details or non-unique email provided.</response>
            <response code="500">Error occurred while editing the user.</response>
        </member>
        <member name="M:TestApplication.Controllers.UserController.DeleteUser(System.Guid)">
            <summary>
            Delete a user by their ID.
            </summary>
            <param name="id">The ID of the user to delete.</param>
            <returns>A message indicating the result of the user deletion.</returns>
            <response code="200">User deleted successfully.</response>
            <response code="400">Invalid ID provided.</response>
            <response code="500">Error occurred while deleting the user.</response>
        </member>
        <member name="T:TestTask.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:TestTask.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TestTask.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TestTask.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
